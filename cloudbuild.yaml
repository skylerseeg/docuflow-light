# cloudbuild.yaml

steps:
  # 1. Install dependencies from the backend's package.json
  - name: 'gcr.io/cloud-builders/npm'
    args: ['install']
    dir: 'backend' # Run this step in the backend directory

  # 2. Build the Docker container image
  # ${_SERVICE_NAME} and ${_REGION} are substitution variables you can define
  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'build'
      - '-t'
      - '${_REGION}-docker.pkg.dev/$PROJECT_ID/${_REPO_NAME}/${_SERVICE_NAME}:$COMMIT_SHA'
      - '.' # Build from the current directory
    dir: 'backend' # Run this step in the backend directory

  # 3. Push the container image to Google Artifact Registry
  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'push'
      - '${_REGION}-docker.pkg.dev/$PROJECT_ID/${_REPO_NAME}/${_SERVICE_NAME}:$COMMIT_SHA'

  # 4. Deploy the new container image to Cloud Run
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: gcloud
    args:
      - 'run'
      - 'deploy'
      - '${_SERVICE_NAME}'
      - '--image'
      - '${_REGION}-docker.pkg.dev/$PROJECT_ID/${_REPO_NAME}/${_SERVICE_NAME}:$COMMIT_SHA'
      - '--region'
      - '${_REGION}'
      - '--platform'
      - 'managed'
      - '--allow-unauthenticated' # Use --no-allow-unauthenticated if behind API Gateway

# Store the built image in Artifact Registry
images:
  - '${_REGION}-docker.pkg.dev/$PROJECT_ID/${_REPO_NAME}/${_SERVICE_NAME}:$COMMIT_SHA'

# Define default substitution variables
# You can override these when you set up the Cloud Build trigger
substitutions:
  _SERVICE_NAME: 'docuflow-lite-backend'
  _REGION: 'us-central1'
  _REPO_NAME: 'docuflow-repo' # The name of your Artifact Registry repository
